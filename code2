library(readr)
library(shiny)
library(ggplot2)
library(dplyr)
#Assigning the data set to SBA
SBA <- read.csv("C:/Stat_385/aarroy30/SBANational.csv", stringsAsFactors = FALSE)
#Getting rid of the decimals and spaces in Gross Approved 
SBA$GA <- as.numeric(gsub("\\$|,", "", SBA$GrAppv))


ui <- fluidPage(
    
    #Title
    titlePanel("GRappv Versus Loan Term"),
    
    #Filters Here
    sidebarLayout(
        sidebarPanel(
            selectInput("MIS", "MIS_Status", 
                        c("Paid in full" = "x",
                          "Loan status charged off" = "y")),
            #selectInput("UR", "Urban or Rural",c("Urban","Rural")),
            selectInput("RVC", "Revolving Line of Credit",c("Yes", "No")),
            selectInput("LD", "LowDoc Loan Program",c("Yes","No")),
            textInput("BT", "BankState(Put only the initals of the state)"),
            sliderInput("priceInput", "GRAppv", min = 0, max = max(SBA$GA), c(0, max = max(SBA$GA)), pre = "$"),
            radioButtons("typeInput", "Urban or Rural",
                         choices = c("Urban","Rural"),
                         selected = "yes"), 
        ),
        #Name and Plot Here
        mainPanel(h3("Gross Approved vs Loan Term"),
                  plotOutput("placeholder")
        )
    )
)


# Define server logic required to draw a plot
server <- function(input, output) {
    model1 <-lm(GA~Term,data=SBA)
    
    
    model1pred <-reactive({
        TermInput <-input$sliderTERM
        predict(model1,newdata=data.frame(Term=TermInput))
    })
    
    output$plot1 <- renderPlot({
        TermInput <-input$sliderTERM
        plot(SBA$TERM,SBA$GA,xlab="Term",ylab="GA",bty="n",pch=16,xlim=c(50,100),
             ylim=c(5,350))
        if(input$showModel1){
            abline(model1,col="red",lwd=2)
        }
        
        legend(85,50,c("Model 1 Prediction"),pch=16,col=c("red","blue"),bty="n",cex=1.2)
        
        points(TermInput,model1pred(),col="red",pch=16,cex=2)
        
    })
    
    output$pred1 <-renderText({
        model1pred()
    })
}


# Run the application 
shinyApp(ui = ui, server = server)
